// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/archive/files": {
            "post": {
                "description": "Accepts multiple files and returns a ZIP archive containing them",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/zip"
                ],
                "summary": "Create an archive",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Files to be archived",
                        "name": "files[]",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/archive/information": {
            "post": {
                "description": "Accepts an archive file and returns detailed information about its structure",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get archive information",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The archive file to be analyzed",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ArchiveDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mail/file": {
            "post": {
                "description": "Sends a file to the provided list of email addresses",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send a file via email",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to be sent via email",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of email addresses",
                        "name": "emails",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ArchiveDetails": {
            "type": "object",
            "properties": {
                "archive_size": {
                    "type": "number"
                },
                "filename": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FileDetails"
                    }
                },
                "total_files": {
                    "type": "number"
                },
                "total_size": {
                    "type": "number"
                }
            }
        },
        "model.FileDetails": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                },
                "mimetype": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Doodocs Backend API",
	Description:      "This is a REST API for handling archives and sending emails.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
